document.addEventListener("DOMContentLoaded", async () => {
    await loadUserProfile();
});

// üìå L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ API
async function loadUserProfile() {
    try {
        const token = localStorage.getItem("token");
        if (!token) {
            alert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
            window.location.href = "login.html";
            return;
        }

        console.log("Token g·ª≠i ƒëi:", token); // üìå Ki·ªÉm tra token trong Console

        const response = await fetch("http://localhost:5000/api/users/profile", {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`
            }
        });

        console.log("Tr·∫°ng th√°i API:", response.status); // üìå Ki·ªÉm tra m√£ ph·∫£n h·ªìi

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng!");
        }

        const user = await response.json();
        console.log("D·ªØ li·ªáu ng∆∞·ªùi d√πng:", user); // üìå Ki·ªÉm tra d·ªØ li·ªáu t·ª´ API

        // C·∫≠p nh·∫≠t giao di·ªán
        document.getElementById("user-name").textContent = user.username || "Ch∆∞a c√≥ t√™n";
        document.getElementById("user-email").textContent = user.email || "Kh√¥ng c√≥ email";
    } catch (error) {
        console.error("L·ªói:", error.message);
        alert(error.message);
    }
}

// G·ªçi h√†m khi trang load
document.addEventListener("DOMContentLoaded", loadUserProfile);


// üìå C·∫≠p nh·∫≠t h·ªì s∆° ng∆∞·ªùi d√πng
document.getElementById("update-profile-form").addEventListener("submit", async (e) => {
    e.preventDefault();
    const newName = document.getElementById("new-name").value.trim();

    if (!newName) {
        alert("T√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
        return;
    }

    try {
        const token = localStorage.getItem("token");
        const response = await fetch("http://localhost:5000/api/users/update-profile", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`
            },
            body: JSON.stringify({ username: newName }) // S·ª≠a t·ª´ name => username
        });

        const data = await response.json();
        if (response.ok) {
            alert("C·∫≠p nh·∫≠t th√†nh c√¥ng!");
            loadUserProfile(); // C·∫≠p nh·∫≠t l·∫°i th√¥ng tin tr√™n giao di·ªán
        } else {
            alert(data.message || "L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin!");
        }
    } catch (error) {
        alert("L·ªói k·∫øt n·ªëi ƒë·∫øn server!");
    }
});

// üìå ƒê·ªïi m·∫≠t kh·∫©u ng∆∞·ªùi d√πng
document.getElementById("change-password-form").addEventListener("submit", async (e) => {
    e.preventDefault();
    const oldPassword = document.getElementById("old-password").value;
    const newPassword = document.getElementById("new-password").value;

    if (!oldPassword || !newPassword) {
        alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
        return;
    }

    try {
        const token = localStorage.getItem("token");
        const response = await fetch("http://localhost:5000/api/users/change-password", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`
            },
            body: JSON.stringify({ oldPassword, newPassword })
        });

        const data = await response.json();
        if (response.ok) {
            alert("ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!");
        } else {
            alert(data.message || "L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u!");
        }
    } catch (error) {
        alert("L·ªói k·∫øt n·ªëi ƒë·∫øn server!");
    }
});

// üìå ƒêƒÉng xu·∫•t ng∆∞·ªùi d√πng
function logout() {
    localStorage.removeItem("token");
    window.location.href = "login.html";
}
