const API_URL = "http://localhost:5000/api";
const token = localStorage.getItem("token");

if (!token) {
    alert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p! Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.");
    window.location.href = "login.html";
}

// üü¢ Xem th√¥ng tin h·ªì s∆° (profile)
async function viewProfile() {
    const res = await fetch(`${API_URL}/users/profile`, {
        headers: { Authorization: `Bearer ${token}` }
    });

    if (!res.ok) {
        alert("Kh√¥ng th·ªÉ t·∫£i h·ªì s∆°. Vui l√≤ng th·ª≠ l·∫°i!");
        return;
    }

    const user = await res.json();
    alert(`üë§ H·ªì S∆°:\nT√™n: ${user.username}\nEmail: ${user.email}`);
}

// üü¢ ƒêƒÉng xu·∫•t
function logout() {
    localStorage.removeItem("token");
    alert("B·∫°n ƒë√£ ƒëƒÉng xu·∫•t!");
    window.location.href = "login.html";
}

// üü¢ Load c√¥ng vi·ªác
async function loadTasks() {
    const res = await fetch(`${API_URL}/tasks`, {
        headers: { Authorization: `Bearer ${token}` }
    });

    if (!res.ok) {
        alert("Kh√¥ng th·ªÉ t·∫£i danh s√°ch c√¥ng vi·ªác.");
        return;
    }

    const tasks = await res.json();
    const taskList = document.getElementById("task-list");
    taskList.innerHTML = "";

    tasks.forEach(task => {
        const li = document.createElement("li");
        const deadlineFormatted = new Date(task.deadline).toLocaleString(); // ƒê·ªãnh d·∫°ng deadline
        li.innerHTML = `
            <span>${task.title} - ${deadlineFormatted} - ${task.completed ? "‚úî Ho√†n th√†nh" : "‚è≥ Ch∆∞a xong"}</span>
            <button onclick="editTask('${task._id}', '${task.title}', '${task.deadline}')">‚úè S·ª≠a</button>
            <button onclick="deleteTask('${task._id}')">üóë X√≥a</button>
            <button onclick="toggleTask('${task._id}', ${task.completed})">${task.completed ? "‚Ü© Ch∆∞a ho√†n th√†nh" : "‚úÖ Ho√†n th√†nh"}</button>
        `;
        taskList.appendChild(li);
    });
}


// üü¢ Th√™m c√¥ng vi·ªác
document.getElementById('task-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    const title = document.getElementById('task-title').value;
    const deadline = document.getElementById('task-deadline').value; // L·∫•y gi√° tr·ªã date-time

    try {
        await fetch(`${API_URL}/tasks`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({ title, deadline }) // G·ª≠i c·∫£ ng√†y v√† gi·ªù
        });
        loadTasks(); // G·ªçi loadTasks() thay v√¨ fetchTasks()
    } catch (error) {
        console.error('L·ªói khi th√™m c√¥ng vi·ªác:', error);
    }
});



// üü¢ Ch·ªânh s·ª≠a c√¥ng vi·ªác (C·∫≠p nh·∫≠t c·∫£ t√™n v√† deadline)
async function editTask(id, currentTitle, currentDeadline) {
    const newTitle = prompt("Nh·∫≠p t√™n c√¥ng vi·ªác m·ªõi:", currentTitle);
    if (!newTitle) return;

    const newDeadline = prompt("Nh·∫≠p deadline m·ªõi (YYYY-MM-DD):", currentDeadline);
    if (!newDeadline) return;

    const res = await fetch(`${API_URL}/tasks/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json", Authorization: `Bearer ${token}` },
        body: JSON.stringify({ title: newTitle, deadline: newDeadline }) // G·ª≠i c·∫£ deadline
    });

    if (res.ok) {
        alert("‚úè C√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
        loadTasks();
    } else {
        alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t!");
    }
}


// üü¢ X√≥a c√¥ng vi·ªác
async function deleteTask(id) {
    if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?")) return;

    const res = await fetch(`${API_URL}/tasks/${id}`, {
        method: "DELETE",
        headers: { Authorization: `Bearer ${token}` }
    });

    if (res.ok) {
        alert("üóë C√¥ng vi·ªác ƒë√£ b·ªã x√≥a!");
        loadTasks();
    } else {
        alert("‚ùå L·ªói khi x√≥a!");
    }
}

// üü¢ Ho√†n th√†nh / B·ªè ho√†n th√†nh c√¥ng vi·ªác
async function toggleTask(id, currentStatus) {
    try {
        const res = await fetch(`${API_URL}/tasks/${id}/toggle`, {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`
            },
            body: JSON.stringify({ status: currentStatus ? "pending" : "completed" }) // ƒê·∫£o tr·∫°ng th√°i
        });

        const data = await res.json();
        console.log("D·ªØ li·ªáu t·ª´ server:", data);

        if (res.ok) {
            alert(data.completed ? "‚úÖ C√¥ng vi·ªác ƒë√£ ho√†n th√†nh!" : "‚Ü© C√¥ng vi·ªác ch∆∞a ho√†n th√†nh!");
            loadTasks();
        } else {
            alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i!");
        }
    } catch (error) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:', error);
    }

    // T·∫£i danh s√°ch c√¥ng vi·ªác khi trang load
    loadTasks();
}
